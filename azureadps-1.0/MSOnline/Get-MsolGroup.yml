### YamlMime:PowershellCmdlet
summary: |-
  Gets groups from Azure Active Directory.
module: MSOnline
notes: ""
outputs:
- name: <xref href="Microsoft.Online.Administration.Group" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet returns a list of groups, which include the following information:

    * CommonName. The group's common name.

    * Description. A description of the group.

    * DisplayName. The group's display name.

    * EmailAddress. The group's email addresses.
    This is not returned for security groups.

    * Errors. A list of errors for the group.

    * GroupType. The group's type.
    Types can be SecurityGroup, DistributionList or MailEnabledSecurityGroup.

    * IsSystem. Whether or not this group is a system group (created by Azure Active Directory).
    These groups cannot be updated or removed.

    * LastDirSyncTime. The date and time that the group was last synched.

    * ManagedBy. The owner of the group.

    * ObjectId. The group's unique object ID.

    * Proxy Addresses. The proxy addresses associated with this group (for mail-enabled groups only).

    * ValidationStatus. Whether or not the group has any errors.
links:
- text: New-MsolGroup
  href: ./New-MsolGroup.yml
- text: Remove-MsolGroup
  href: ./Remove-MsolGroup.yml
- text: Set-MsolGroup
  href: ./Set-MsolGroup.yml
syntaxes:
- >-
  Get-MsolGroup [-UserObjectId <Guid>] [-IsAgentRole] [-UserPrincipalName <String>] [-GroupType <GroupType>]

   [-HasErrorsOnly] [-HasLicenseErrorsOnly <Boolean>] [-SearchString <String>] [-MaxResults <Int32>]

   [-TenantId <Guid>] [<CommonParameters>]
- Get-MsolGroup -ObjectId <Guid> [-TenantId <Guid>] [<CommonParameters>]
- >-
  Get-MsolGroup [-UserObjectId <Guid>] [-IsAgentRole] [-UserPrincipalName <String>] [-GroupType <GroupType>]

   [-HasErrorsOnly] [-HasLicenseErrorsOnly <Boolean>] [-SearchString <String>] [-All] [-TenantId <Guid>]

   [<CommonParameters>]
examples:
- title: 'Example 1: Get a group by using an ID'
  code: |-
    PS C:\> Get-MsolGroup -ObjectId aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb
  description: |-
    This command returns the group object that has the specified ID.
  summary: ""
- title: 'Example 2: Get all groups'
  code: |-
    PS C:\> Get-MsolGroup
  description: |-
    This command returns the entire set of groups for the tenant, up to the default 250 results.
  summary: ""
- title: 'Example 3: Get a group by using a user principal name'
  code: |-
    PS C:\> Get-MsolGroup -isAgentRole -UserPrincipalName "pattifuller@contoso.com"
  description: |-
    This command returns the agent groups that a user is a member of.
    This only applies for companies that have partner privileges.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: All
  isRequired: true
  description: |+
    Indicates that this cmdlet returns all results that it finds.
    Do not specify this parameter and the _MaxResults_ parameter.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="GroupType" data-throw-if-not-resolved="False" />
  name: GroupType
  description: |+
    Specifies the type of groups to get.
    Valid values are Security, MailEnabledSecurity, and DistributionList.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: HasErrorsOnly
  description: |+
    Indicates that this cmdlet returns only groups that have validation errors.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: HasLicenseErrorsOnly
  description: |+
    Specifies whether this cmdlet returns only security groups that have license errors.


  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: IsAgentRole
  description: |+
    Specifies that this cmdlet returns only agent groups.
    This value applies only to partner users.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: MaxResults
  description: |+
    Specifies the maximum number of results that this cmdlet returns.
    The default value is 250.

  defaultValue: "250"
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Guid" data-throw-if-not-resolved="False" />
  name: ObjectId
  isRequired: true
  description: |+
    Specifies the unique object ID of the group to get.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: SearchString
  description: |+
    Specifies a string.
    This cmdlet returns security groups that have a display name that start with this string.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Guid" data-throw-if-not-resolved="False" />
  name: TenantId
  description: |+
    Specifies the unique ID of the tenant on which to perform the operation.
    The default value is the tenant of the current user.
    This parameter applies only to partner users.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Guid" data-throw-if-not-resolved="False" />
  name: UserObjectId
  description: |+
    Specifies the unique ID of a user.
    This cmdlet returns security groups to which this user belongs.
    This parameter must be used along with the _IsAgentRole_ parameter.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: UserPrincipalName
  description: |+
    Specifies the user principal name of a user.
    This cmdlet returns security groups to which this user belongs.
    This parameter must be used along with the _IsAgentRole_ parameter.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: MSOnline.Get-MsolGroup
name: Get-MsolGroup
description: |-
  The **Get-MsolGroup** cmdlet gets groups from Azure Active Directory.
  This cmdlet can be used to return a single group, if you specify the _ObjectId_ parameter, or to search within all groups.
metadata:
  external help file: Microsoft.Online.Administration.Automation.PSModule.dll-Help.xml
  online version: ""
  schema: 2.0.0
  ms.assetid: BFC8C1EC-B14D-45C6-8F11-E128E22C13A8
  ms.reviewer: stevemutungi
  ms.custom: iamfeature=PowerShell
